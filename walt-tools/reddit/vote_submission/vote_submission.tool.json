{
  "name": "postmill_set_submission_vote",
  "description": "Set vote on a Postmill submission (upvote, downvote, or remove vote), using stable selectors on the forum listing. PRECONDITION: The submission must be in the forum listing. Successful outcome: The submission is voted on and the score/state is updated.",
  "version": "1.0.0",
  "steps": [
    {
      "description": "Open the forum listing that contains inline voting controls for the target submission.",
      "output": null,
      "type": "navigation",
      "url": "{base_url}/f/{forum_name}",
      "url_operation": null
    },
    {
      "description": "Apply the requested vote on the targeted submission using stable selectors inside its container. Use the permalink to scope the right article; click the correct control based on {vote}. Verify the resulting UI state toggles accordingly.",
      "output": null,
      "type": "agent",
      "task": "Set vote on submission {submission_id} to {vote}. In the forum listing, find the article containing a[href='{submission_path}']. If vote == '1', click the up arrow icon (img[alt='up']) in that article. If vote == '-1', click the down arrow icon (img[alt='down']). If vote == '0', click whichever arrow is currently active (retract). After clicking, wait for any loading spinner to finish and ensure the score/icon state reflects the target vote.",
      "max_steps": 6
    },
    {
      "description": "Allow UI to update the score and icon states after vote action.",
      "output": null,
      "type": "wait",
      "seconds": 1.0
    }
  ],
  "input_schema": [
    {
      "name": "base_url",
      "type": "string",
      "format": null,
      "required": true,
      "enum": null,
      "description": "Base URL with protocol (e.g., http://localhost:9999)"
    },
    {
      "name": "forum_name",
      "type": "string",
      "format": null,
      "required": true,
      "enum": [
        "allentown",
        "arlingtonva",
        "Art",
        "AskReddit",
        "askscience",
        "aww",
        "baltimore",
        "books",
        "boston",
        "BridgeportCT",
        "BuyItForLife",
        "CambridgeMA",
        "ColumbiaMD",
        "Connecticut",
        "consoles",
        "coolgithubprojects",
        "creepy",
        "dataisbeautiful",
        "deeplearning",
        "DIY",
        "Documentaries",
        "EarthPorn",
        "explainlikeimfive",
        "food",
        "funny",
        "Futurology",
        "gadgets",
        "gaming",
        "GetMotivated",
        "gifs",
        "Hartford",
        "headphones",
        "history",
        "IAmA",
        "InternetIsBeautiful",
        "iphone",
        "jerseycity",
        "Jokes",
        "lakewood",
        "LifeProTips",
        "listentothis",
        "LowellMA",
        "MachineLearning",
        "Maine",
        "ManchesterNH",
        "massachusetts",
        "MechanicalKeyboards",
        "memes",
        "mildlyinteresting",
        "monitor",
        "movies",
        "Music",
        "Newark",
        "newhampshire",
        "newhaven",
        "newjersey",
        "news",
        "nosleep",
        "nottheonion",
        "nyc",
        "OldSchoolCool",
        "Paterson",
        "Pennsylvania",
        "personalfinance",
        "philadelphia",
        "philosophy",
        "photoshopbattles",
        "pics",
        "pittsburgh",
        "providence",
        "relationship_advice",
        "RhodeIsland",
        "rva",
        "science",
        "Showerthoughts",
        "singularity",
        "space",
        "sports",
        "springfieldMO",
        "StamfordCT",
        "technology",
        "television",
        "tifu",
        "todayilearned",
        "UpliftingNews",
        "vermont",
        "videos",
        "wallstreetbets",
        "Washington",
        "washingtondc",
        "WaterburyCT",
        "WorcesterMA",
        "worldnews",
        "WritingPrompts",
        "yonkers"
      ],
      "description": "Forum name (e.g., AskReddit)"
    },
    {
      "name": "submission_path",
      "type": "string",
      "format": null,
      "required": true,
      "enum": null
    },
    {
      "name": "submission_id",
      "type": "string",
      "format": null,
      "required": true,
      "enum": null
    },
    {
      "name": "vote",
      "type": "string",
      "format": null,
      "required": true,
      "enum": [
        "1",
        "0",
        "-1"
      ]
    }
  ]
}